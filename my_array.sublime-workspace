{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"bo",
				"boat_coordinates"
			],
			[
				"boat",
				"boat_body"
			],
			[
				"co",
				"columns"
			],
			[
				"start",
				"starting_position"
			],
			[
				"regi",
				"register_shot"
			],
			[
				"boa",
				"boat_length"
			],
			[
				"cre",
				"create_board"
			],
			[
				"lau",
				"launch"
			],
			[
				"a",
				"airport"
			],
			[
				"air",
				"airspace"
			],
			[
				"ai",
				"airspace"
			],
			[
				"land",
				"landing_sequence"
			],
			[
				"landed",
				"landed_planes"
			],
			[
				"lan",
				"landing_plane"
			],
			[
				"landing",
				"landing_plane"
			],
			[
				"la",
				"landing_plane"
			],
			[
				"get",
				"instance_variable_get"
			],
			[
				"pla",
				"planes"
			],
			[
				"park",
				"park_planes"
			],
			[
				"na",
				"navigate_storm"
			],
			[
				"landig",
				"landing_plane"
			],
			[
				"requ",
				"request_permission_to_land_at"
			],
			[
				"fly",
				"flyingplanes"
			],
			[
				"in",
				"instance_variable_get"
			],
			[
				"tim",
				"timbuktu"
			],
			[
				"ti",
				"timbuktu"
			],
			[
				"req",
				"request_permission_to_land_at"
			],
			[
				"stor",
				"stormy"
			],
			[
				"take",
				"takeoff"
			],
			[
				"weather",
				"weather_check"
			],
			[
				"tak",
				"takeoff"
			],
			[
				"inst",
				"instance_variable_set"
			],
			[
				"chec",
				"check_permission_to_land"
			],
			[
				"ch",
				"check_permission_to_land"
			],
			[
				"set",
				"instance_variable_set"
			],
			[
				"permissin",
				"permission_to_land"
			],
			[
				"permission",
				"permission_to_land"
			],
			[
				"flying",
				"flying_status"
			],
			[
				"per",
				"permission_to_takeoff"
			],
			[
				"p",
				"permission_to_land"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "require 'my_inject'\n\ndescribe 'my inject' do\n\n  context 'when there is less than 2 elements with no seed' do\n  \n    it 'empty array be nil' do\n      expect([].my_inject).to eq [].inject\n    end\n  \n  \n  end\n\n\nend\n",
			"file": "spec/my_inject_spec.rb",
			"file_size": 212,
			"file_write_time": 130428930630000000,
			"settings":
			{
				"buffer_size": 212,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "class Array\n  def my_inject(arg=0)\n  \n  end\nend\n\n# my_array = [1,2,3,4,5,6,7]\n\n# result = my_array.my_inject do |acc, ele| acc + ele end\n\n# puts result.inspect\n",
			"file": "lib/my_inject.rb",
			"file_size": 264,
			"file_write_time": 130428930330000000,
			"settings":
			{
				"buffer_size": 160,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"p",
				"Package Control: Install Package"
			],
			[
				"pa",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			]
		],
		"width": 488.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			" import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/Dan/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/Dan/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/Dan/Dropbox/Coding/makersacademy/projects/battleship/lib/board.rb",
		"/Users/Dan/Dropbox/Coding/makersacademy/projects/battleship/lib/boat.rb",
		"/Users/Dan/Dropbox/Coding/makersacademy/projects/architect_challenge/lib/architect_classes.rb"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"request_permission_to_land",
			"(:the_whim_of_the_gods) {2}",
			"land!",
			"hackney"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "spec/my_inject_spec.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 212,
						"regions":
						{
						},
						"selection":
						[
							[
								212,
								212
							]
						],
						"settings":
						{
							"syntax": "Packages/Ruby/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 1,
					"file": "lib/my_inject.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 160,
						"regions":
						{
						},
						"selection":
						[
							[
								37,
								37
							]
						],
						"settings":
						{
							"syntax": "Packages/Ruby/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 116.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "my_array.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 191.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
